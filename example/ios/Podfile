require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '13.0'


# We ingore warning except for RNMBGL
INHIBIT_WARNING_BY_DEFAULT = true

if INHIBIT_WARNING_BY_DEFAULT
  ORIG_POD = method(:pod)

  # Override pods so we default to disbling all warnings
  def pod(name, *requirements)
    options = requirements.last
    if options.is_a?(Hash)
      options[:inhibit_warnings] = true unless options.has_key?(:inhibit_warnings)
    else
      requirements.push({inhibit_warnings: true})
    end
    ORIG_POD[name, *requirements]
  end
end

target 'RNMapboxGLExample' do
  config = use_native_modules!
  use_react_native!(:path => config["reactNativePath"])

  # default version
  pod 'react-native-mapbox-gl', :path => '../../', :inhibit_warnings => false

  target 'RNMapboxGLExampleTests' do
    inherit! :search_paths
    # Pods for testing
  end

  use_native_modules!

  pre_install do |installer|
    $RNMBGL.pre_install(installer)
  end
  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  # use_flipper!
  use_flipper!({ 'Flipper-Folly' => '2.3.0' })

  post_install do |installer|
    flipper_post_install(installer)
    $RNMBGL.post_install(installer)


    # Work around for issue described here: https://github.com/CocoaPods/CocoaPods/issues/8122#issuecomment-427680543
    project_path = 'RNMapboxGLExample.xcodeproj'
    project = Xcodeproj::Project.open(project_path)
    project.targets.each do |target|
      build_phase = target.build_phases.find { |bp| bp.display_name == '[CP] Copy Pods Resources' }
    
      puts "build_phase: #{build_phase}"
      if build_phase.present?
        puts "Input paths: #{build_phase.input_paths.join(',')}"
        build_phase.input_paths.push('${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Assets.car')
        build_phase.output_paths.delete('${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Assets.car')
      end
    end
    project.save(project_path)

    project = Xcodeproj::Project.open(project_path)
    project.targets.each do |target|
      build_phase = target.build_phases.find { |bp| bp.display_name == '[CP] Copy Pods Resources' }
    
      puts "[1] build_phase: #{build_phase}"
      if build_phase.present?
        puts "[2] Input paths: #{build_phase.input_paths.join(',')}"
      end
    end
  end
end

target 'RNMapboxGLExample-tvOS' do
  # Pods for RNMapboxGLExample-tvOS

  target 'RNMapboxGLExample-tvOSTests' do
    inherit! :search_paths
    # Pods for testing
  end

end
